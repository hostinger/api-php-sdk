<?php
/** @noinspection PhpMissingFieldTypeInspection */
/** @noinspection PhpPluralMixedCanBeReplacedWithArrayInspection */
/** @noinspection PhpMissingParamTypeInspection */
/** @noinspection PhpMissingReturnTypeInspection */
/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.96
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Model;

use ArrayAccess;
use JsonSerializable;
use InvalidArgumentException;
use ReturnTypeWillChange;
use Hostinger\ObjectSerializer;

class VPSV1FirewallFirewallRuleResource 
{
    /**
     * @var int $id
     */
    private $id;

    /**
     * @var string $action
     */
    private $action;

    /**
     * @var string $protocol
     */
    private $protocol;

    /**
     * @var string $port
     */
    private $port;

    /**
     * @var string $source
     */
    private $source;

    /**
     * @var string $sourceDetail
     */
    private $sourceDetail;

    /**
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * @param int $id
     */
    public function setId($id): self
    {
        $this->id = $id;

        return $this;
    }
    /**
     * @return string
     */
    public function getAction()
    {
        return $this->action;
    }

    /**
     * @param string $action
     */
    public function setAction($action): self
    {
        $this->action = $action;

        return $this;
    }
    /**
     * @return string
     */
    public function getProtocol()
    {
        return $this->protocol;
    }

    /**
     * @param string $protocol
     */
    public function setProtocol($protocol): self
    {
        $this->protocol = $protocol;

        return $this;
    }
    /**
     * @return string
     */
    public function getPort()
    {
        return $this->port;
    }

    /**
     * @param string $port
     */
    public function setPort($port): self
    {
        $this->port = $port;

        return $this;
    }
    /**
     * @return string
     */
    public function getSource()
    {
        return $this->source;
    }

    /**
     * @param string $source
     */
    public function setSource($source): self
    {
        $this->source = $source;

        return $this;
    }
    /**
     * @return string
     */
    public function getSourceDetail()
    {
        return $this->sourceDetail;
    }

    /**
     * @param string $sourceDetail
     */
    public function setSourceDetail($sourceDetail): self
    {
        $this->sourceDetail = $sourceDetail;

        return $this;
    }
}

