<?php
/** @noinspection PhpMissingFieldTypeInspection */
/** @noinspection PhpPluralMixedCanBeReplacedWithArrayInspection */
/** @noinspection PhpMissingParamTypeInspection */
/** @noinspection PhpMissingReturnTypeInspection */
/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.98
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Model;

class DNSV1ZoneResetRequest 
{
    /**
     * @var bool $sync
     */
    private ?bool $sync;

    /**
     * @var bool $resetEmailRecords
     */
    private ?bool $resetEmailRecords;

    /**
     * @var string[] $whitelistedRecordTypes
     */
    private ?array $whitelistedRecordTypes;

    public function getSync(): ?bool
    {
        return $this->sync;
    }

    /**
     * @param bool|null $sync Determines if operation should be run synchronously
     */
    public function setSync(?bool $sync): self
    {
        $this->sync = $sync;

        return $this;
    }
    public function getResetEmailRecords(): ?bool
    {
        return $this->resetEmailRecords;
    }

    /**
     * @param bool|null $resetEmailRecords Determines if email records should be reset
     */
    public function setResetEmailRecords(?bool $resetEmailRecords): self
    {
        $this->resetEmailRecords = $resetEmailRecords;

        return $this;
    }
    public function getWhitelistedRecordTypes(): ?array
    {
        return $this->whitelistedRecordTypes;
    }

    /**
     * @param string[]|null $whitelistedRecordTypes Specifies which record types to not reset
     */
    public function setWhitelistedRecordTypes(?array $whitelistedRecordTypes): self
    {
        $this->whitelistedRecordTypes = $whitelistedRecordTypes;

        return $this;
    }
}

