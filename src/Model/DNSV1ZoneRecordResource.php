<?php
/** @noinspection PhpMissingParamTypeInspection */
/** @noinspection PhpMissingReturnTypeInspection */
/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.96
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Model;

use ArrayAccess;
use JsonSerializable;
use InvalidArgumentException;
use ReturnTypeWillChange;
use Hostinger\ObjectSerializer;

/**
 * @implements ArrayAccess<string, mixed>
 */
class DNSV1ZoneRecordResource 
{
    /**
     * @param string $name
     * @param \Hostinger\Model\DNSV1ZoneNameRecordCollection $records
     * @param int $ttl
     * @param string $type
     */
    protected static $openAPIModelName = 'DNSV1ZoneRecordResource';
    public function __construct(
        private $name,
        private $records,
        private $ttl,
        private $type,
    ) {
    }

    /**
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * @param string $name
     *
     * @return self
     */
    public function setName($name): self
    {
        $this->name = $name;

        return $this;
    }
    /**
     * @return \Hostinger\Model\DNSV1ZoneNameRecordCollection
     */
    public function getRecords()
    {
        return $this->records;
    }

    /**
     * @param \Hostinger\Model\DNSV1ZoneNameRecordCollection $records
     *
     * @return self
     */
    public function setRecords($records): self
    {
        $this->records = $records;

        return $this;
    }
    /**
     * @return int
     */
    public function getTtl()
    {
        return $this->ttl;
    }

    /**
     * @param int $ttl
     *
     * @return self
     */
    public function setTtl($ttl): self
    {
        $this->ttl = $ttl;

        return $this;
    }
    /**
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * @param string $type
     *
     * @return self
     */
    public function setType($type): self
    {
        $this->type = $type;

        return $this;
    }
}

