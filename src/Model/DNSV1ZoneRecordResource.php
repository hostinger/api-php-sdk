<?php
/** @noinspection PhpMissingFieldTypeInspection */
/** @noinspection PhpPluralMixedCanBeReplacedWithArrayInspection */
/** @noinspection PhpMissingParamTypeInspection */
/** @noinspection PhpMissingReturnTypeInspection */
/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.97
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Model;

use ArrayAccess;
use JsonSerializable;
use InvalidArgumentException;
use ReturnTypeWillChange;
use Hostinger\ObjectSerializer;

class DNSV1ZoneRecordResource 
{
    /**
     * @var string $name
     */
    private $name;

    /**
     * @var \Hostinger\Model\DNSV1ZoneNameRecordResource[] $records
     */
    private $records;

    /**
     * @var int $ttl
     */
    private $ttl;

    /**
     * @var string $type
     */
    private $type;

    /**
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * @param string $name
     */
    public function setName($name): self
    {
        $this->name = $name;

        return $this;
    }
    /**
     * @return \Hostinger\Model\DNSV1ZoneNameRecordResource[]
     */
    public function getRecords()
    {
        return $this->records;
    }

    /**
     * @param \Hostinger\Model\DNSV1ZoneNameRecordResource[] $records
     */
    public function setRecords($records): self
    {
        $this->records = $records;

        return $this;
    }
    /**
     * @return int
     */
    public function getTtl()
    {
        return $this->ttl;
    }

    /**
     * @param int $ttl
     */
    public function setTtl($ttl): self
    {
        $this->ttl = $ttl;

        return $this;
    }
    /**
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * @param string $type
     */
    public function setType($type): self
    {
        $this->type = $type;

        return $this;
    }
}

