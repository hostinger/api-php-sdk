<?php
/** @noinspection PhpMissingFieldTypeInspection */
/** @noinspection PhpPluralMixedCanBeReplacedWithArrayInspection */
/** @noinspection PhpMissingParamTypeInspection */
/** @noinspection PhpMissingReturnTypeInspection */
/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.96
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Model;

use ArrayAccess;
use JsonSerializable;
use InvalidArgumentException;
use ReturnTypeWillChange;
use Hostinger\ObjectSerializer;

class DomainsV1AvailabilityAvailabilityResource 
{
    /**
     * @var string|null $domain
     */
    private $domain = null;

    /**
     * @var bool $isAvailable
     */
    private $isAvailable;

    /**
     * @var bool $isAlternative
     */
    private $isAlternative;

    /**
     * @var string|null $restriction
     */
    private $restriction = null;

    /**
     * @return string|null
     */
    public function getDomain()
    {
        return $this->domain;
    }

    /**
     * @param string|null $domain
     */
    public function setDomain($domain): self
    {
        $this->domain = $domain;

        return $this;
    }
    /**
     * @return bool
     */
    public function getIsAvailable()
    {
        return $this->isAvailable;
    }

    /**
     * @param bool $isAvailable
     */
    public function setIsAvailable($isAvailable): self
    {
        $this->isAvailable = $isAvailable;

        return $this;
    }
    /**
     * @return bool
     */
    public function getIsAlternative()
    {
        return $this->isAlternative;
    }

    /**
     * @param bool $isAlternative
     */
    public function setIsAlternative($isAlternative): self
    {
        $this->isAlternative = $isAlternative;

        return $this;
    }
    /**
     * @return string|null
     */
    public function getRestriction()
    {
        return $this->restriction;
    }

    /**
     * @param string|null $restriction
     */
    public function setRestriction($restriction): self
    {
        $this->restriction = $restriction;

        return $this;
    }
}

