<?php
/** @noinspection PhpMissingParamTypeInspection */
/** @noinspection PhpMissingReturnTypeInspection */
/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.96
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Model;

use ArrayAccess;
use JsonSerializable;
use InvalidArgumentException;
use ReturnTypeWillChange;
use Hostinger\ObjectSerializer;

/**
 * @implements ArrayAccess<string, mixed>
 */
class VPSV1DockerManagerContainerStatsResource 
{
    /**
     * @param float $cpuPercentage
     * @param float $memoryPercentage
     * @param float $memoryUsed
     * @param float $memoryTotal
     * @param int $netIn
     * @param int $netOut
     */
    protected static $openAPIModelName = 'VPSV1DockerManagerContainerStatsResource';
    public function __construct(
        private $cpuPercentage,
        private $memoryPercentage,
        private $memoryUsed,
        private $memoryTotal,
        private $netIn,
        private $netOut,
    ) {
    }

    /**
     * @return float
     */
    public function getCpuPercentage()
    {
        return $this->cpuPercentage;
    }

    /**
     * @param float $cpuPercentage
     *
     * @return self
     */
    public function setCpuPercentage($cpuPercentage): self
    {
        $this->cpuPercentage = $cpuPercentage;

        return $this;
    }
    /**
     * @return float
     */
    public function getMemoryPercentage()
    {
        return $this->memoryPercentage;
    }

    /**
     * @param float $memoryPercentage
     *
     * @return self
     */
    public function setMemoryPercentage($memoryPercentage): self
    {
        $this->memoryPercentage = $memoryPercentage;

        return $this;
    }
    /**
     * @return float
     */
    public function getMemoryUsed()
    {
        return $this->memoryUsed;
    }

    /**
     * @param float $memoryUsed
     *
     * @return self
     */
    public function setMemoryUsed($memoryUsed): self
    {
        $this->memoryUsed = $memoryUsed;

        return $this;
    }
    /**
     * @return float
     */
    public function getMemoryTotal()
    {
        return $this->memoryTotal;
    }

    /**
     * @param float $memoryTotal
     *
     * @return self
     */
    public function setMemoryTotal($memoryTotal): self
    {
        $this->memoryTotal = $memoryTotal;

        return $this;
    }
    /**
     * @return int
     */
    public function getNetIn()
    {
        return $this->netIn;
    }

    /**
     * @param int $netIn
     *
     * @return self
     */
    public function setNetIn($netIn): self
    {
        $this->netIn = $netIn;

        return $this;
    }
    /**
     * @return int
     */
    public function getNetOut()
    {
        return $this->netOut;
    }

    /**
     * @param int $netOut
     *
     * @return self
     */
    public function setNetOut($netOut): self
    {
        $this->netOut = $netOut;

        return $this;
    }
}

