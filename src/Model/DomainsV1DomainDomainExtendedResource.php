<?php
/** @noinspection PhpMissingParamTypeInspection */
/** @noinspection PhpMissingReturnTypeInspection */
/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.96
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Model;

use ArrayAccess;
use JsonSerializable;
use InvalidArgumentException;
use ReturnTypeWillChange;
use Hostinger\ObjectSerializer;

/**
 * @implements ArrayAccess<string, mixed>
 */
class DomainsV1DomainDomainExtendedResource 
{
    /**
     * @param string $domain
     * @param string $status
     * @param string|null $message
     * @param bool $isPrivacyProtectionAllowed
     * @param bool $isPrivacyProtected
     * @param bool $isLockable
     * @param bool $isLocked
     * @param \Hostinger\Model\DomainsV1DomainDomainExtendedResourceNameServers $nameServers
     * @param string[][] $childNameServers
     * @param \Hostinger\Model\DomainsV1DomainDomainExtendedResourceDomainContacts $domainContacts
     * @param \DateTime $createdAt
     * @param \DateTime $updatedAt
     * @param \DateTime|null $_60daysLockExpiresAt
     * @param \DateTime|null $registeredAt
     * @param \DateTime|null $expiresAt
     */
    protected static $openAPIModelName = 'DomainsV1DomainDomainExtendedResource';
    public function __construct(
        private $domain,
        private $status,
        private $message = null,
        private $isPrivacyProtectionAllowed,
        private $isPrivacyProtected,
        private $isLockable,
        private $isLocked,
        private $nameServers,
        private $childNameServers,
        private $domainContacts,
        private $createdAt,
        private $updatedAt,
        private $_60daysLockExpiresAt = null,
        private $registeredAt = null,
        private $expiresAt = null,
    ) {
    }

    /**
     * @return string
     */
    public function getDomain()
    {
        return $this->domain;
    }

    /**
     * @param string $domain
     *
     * @return self
     */
    public function setDomain($domain): self
    {
        $this->domain = $domain;

        return $this;
    }
    /**
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * @param string $status
     *
     * @return self
     */
    public function setStatus($status): self
    {
        $this->status = $status;

        return $this;
    }
    /**
     * @return string|null
     */
    public function getMessage()
    {
        return $this->message;
    }

    /**
     * @param string|null $message
     *
     * @return self
     */
    public function setMessage($message): self
    {
        $this->message = $message;

        return $this;
    }
    /**
     * @return bool
     */
    public function getIsPrivacyProtectionAllowed()
    {
        return $this->isPrivacyProtectionAllowed;
    }

    /**
     * @param bool $isPrivacyProtectionAllowed
     *
     * @return self
     */
    public function setIsPrivacyProtectionAllowed($isPrivacyProtectionAllowed): self
    {
        $this->isPrivacyProtectionAllowed = $isPrivacyProtectionAllowed;

        return $this;
    }
    /**
     * @return bool
     */
    public function getIsPrivacyProtected()
    {
        return $this->isPrivacyProtected;
    }

    /**
     * @param bool $isPrivacyProtected
     *
     * @return self
     */
    public function setIsPrivacyProtected($isPrivacyProtected): self
    {
        $this->isPrivacyProtected = $isPrivacyProtected;

        return $this;
    }
    /**
     * @return bool
     */
    public function getIsLockable()
    {
        return $this->isLockable;
    }

    /**
     * @param bool $isLockable
     *
     * @return self
     */
    public function setIsLockable($isLockable): self
    {
        $this->isLockable = $isLockable;

        return $this;
    }
    /**
     * @return bool
     */
    public function getIsLocked()
    {
        return $this->isLocked;
    }

    /**
     * @param bool $isLocked
     *
     * @return self
     */
    public function setIsLocked($isLocked): self
    {
        $this->isLocked = $isLocked;

        return $this;
    }
    /**
     * @return \Hostinger\Model\DomainsV1DomainDomainExtendedResourceNameServers
     */
    public function getNameServers()
    {
        return $this->nameServers;
    }

    /**
     * @param \Hostinger\Model\DomainsV1DomainDomainExtendedResourceNameServers $nameServers
     *
     * @return self
     */
    public function setNameServers($nameServers): self
    {
        $this->nameServers = $nameServers;

        return $this;
    }
    /**
     * @return string[][]
     */
    public function getChildNameServers()
    {
        return $this->childNameServers;
    }

    /**
     * @param string[][] $childNameServers
     *
     * @return self
     */
    public function setChildNameServers($childNameServers): self
    {
        $this->childNameServers = $childNameServers;

        return $this;
    }
    /**
     * @return \Hostinger\Model\DomainsV1DomainDomainExtendedResourceDomainContacts
     */
    public function getDomainContacts()
    {
        return $this->domainContacts;
    }

    /**
     * @param \Hostinger\Model\DomainsV1DomainDomainExtendedResourceDomainContacts $domainContacts
     *
     * @return self
     */
    public function setDomainContacts($domainContacts): self
    {
        $this->domainContacts = $domainContacts;

        return $this;
    }
    /**
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    /**
     * @param \DateTime $createdAt
     *
     * @return self
     */
    public function setCreatedAt($createdAt): self
    {
        $this->createdAt = $createdAt;

        return $this;
    }
    /**
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->updatedAt;
    }

    /**
     * @param \DateTime $updatedAt
     *
     * @return self
     */
    public function setUpdatedAt($updatedAt): self
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }
    /**
     * @return \DateTime|null
     */
    public function get60daysLockExpiresAt()
    {
        return $this->_60daysLockExpiresAt;
    }

    /**
     * @param \DateTime|null $_60daysLockExpiresAt
     *
     * @return self
     */
    public function set60daysLockExpiresAt($_60daysLockExpiresAt): self
    {
        $this->_60daysLockExpiresAt = $_60daysLockExpiresAt;

        return $this;
    }
    /**
     * @return \DateTime|null
     */
    public function getRegisteredAt()
    {
        return $this->registeredAt;
    }

    /**
     * @param \DateTime|null $registeredAt
     *
     * @return self
     */
    public function setRegisteredAt($registeredAt): self
    {
        $this->registeredAt = $registeredAt;

        return $this;
    }
    /**
     * @return \DateTime|null
     */
    public function getExpiresAt()
    {
        return $this->expiresAt;
    }

    /**
     * @param \DateTime|null $expiresAt
     *
     * @return self
     */
    public function setExpiresAt($expiresAt): self
    {
        $this->expiresAt = $expiresAt;

        return $this;
    }
}

