<?php
/** @noinspection PhpMissingParamTypeInspection */
/** @noinspection PhpMissingReturnTypeInspection */
/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.96
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Model;

use ArrayAccess;
use JsonSerializable;
use InvalidArgumentException;
use ReturnTypeWillChange;
use Hostinger\ObjectSerializer;

/**
 * @implements ArrayAccess<string, mixed>
 */
class VPSV1DockerManagerContainerPortResource 
{
    /**
     * @param string $type
     * @param string $protocol
     * @param string|null $hostIp
     * @param int|null $hostPort
     * @param int|null $containerPort
     * @param int|null $hostPortStart
     * @param int|null $hostPortEnd
     * @param int|null $containerPortStart
     * @param int|null $containerPortEnd
     */
    protected static $openAPIModelName = 'VPSV1DockerManagerContainerPortResource';
    public function __construct(
        private $type,
        private $protocol,
        private $hostIp = null,
        private $hostPort = null,
        private $containerPort = null,
        private $hostPortStart = null,
        private $hostPortEnd = null,
        private $containerPortStart = null,
        private $containerPortEnd = null,
    ) {
    }

    /**
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * @param string $type
     *
     * @return self
     */
    public function setType($type): self
    {
        $this->type = $type;

        return $this;
    }
    /**
     * @return string
     */
    public function getProtocol()
    {
        return $this->protocol;
    }

    /**
     * @param string $protocol
     *
     * @return self
     */
    public function setProtocol($protocol): self
    {
        $this->protocol = $protocol;

        return $this;
    }
    /**
     * @return string|null
     */
    public function getHostIp()
    {
        return $this->hostIp;
    }

    /**
     * @param string|null $hostIp
     *
     * @return self
     */
    public function setHostIp($hostIp): self
    {
        $this->hostIp = $hostIp;

        return $this;
    }
    /**
     * @return int|null
     */
    public function getHostPort()
    {
        return $this->hostPort;
    }

    /**
     * @param int|null $hostPort
     *
     * @return self
     */
    public function setHostPort($hostPort): self
    {
        $this->hostPort = $hostPort;

        return $this;
    }
    /**
     * @return int|null
     */
    public function getContainerPort()
    {
        return $this->containerPort;
    }

    /**
     * @param int|null $containerPort
     *
     * @return self
     */
    public function setContainerPort($containerPort): self
    {
        $this->containerPort = $containerPort;

        return $this;
    }
    /**
     * @return int|null
     */
    public function getHostPortStart()
    {
        return $this->hostPortStart;
    }

    /**
     * @param int|null $hostPortStart
     *
     * @return self
     */
    public function setHostPortStart($hostPortStart): self
    {
        $this->hostPortStart = $hostPortStart;

        return $this;
    }
    /**
     * @return int|null
     */
    public function getHostPortEnd()
    {
        return $this->hostPortEnd;
    }

    /**
     * @param int|null $hostPortEnd
     *
     * @return self
     */
    public function setHostPortEnd($hostPortEnd): self
    {
        $this->hostPortEnd = $hostPortEnd;

        return $this;
    }
    /**
     * @return int|null
     */
    public function getContainerPortStart()
    {
        return $this->containerPortStart;
    }

    /**
     * @param int|null $containerPortStart
     *
     * @return self
     */
    public function setContainerPortStart($containerPortStart): self
    {
        $this->containerPortStart = $containerPortStart;

        return $this;
    }
    /**
     * @return int|null
     */
    public function getContainerPortEnd()
    {
        return $this->containerPortEnd;
    }

    /**
     * @param int|null $containerPortEnd
     *
     * @return self
     */
    public function setContainerPortEnd($containerPortEnd): self
    {
        $this->containerPortEnd = $containerPortEnd;

        return $this;
    }
}

