<?php
/** @noinspection PhpMissingFieldTypeInspection */
/** @noinspection PhpPluralMixedCanBeReplacedWithArrayInspection */
/** @noinspection PhpMissingParamTypeInspection */
/** @noinspection PhpMissingReturnTypeInspection */
/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.98
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Model;

class VPSV1ActionActionResource 
{
    public const string STATE_SUCCESS = 'success';
    public const string STATE_ERROR = 'error';
    public const string STATE_DELAYED = 'delayed';
    public const string STATE_SENT = 'sent';
    public const string STATE_CREATED = 'created';

    /**
     * @var int $id
     */
    private ?int $id;

    /**
     * @var string $name
     */
    private ?string $name;

    /**
     * @var string $state
     */
    private ?string $state;

    /**
     * @var \DateTime $createdAt
     */
    private ?\DateTime $createdAt;

    /**
     * @var \DateTime $updatedAt
     */
    private ?\DateTime $updatedAt;

    public function getId(): ?int
    {
        return $this->id;
    }

    /**
     * @param int|null $id Action ID
     */
    public function setId(?int $id): self
    {
        $this->id = $id;

        return $this;
    }
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * @param string|null $name Action name
     */
    public function setName(?string $name): self
    {
        $this->name = $name;

        return $this;
    }
    public function getState(): ?string
    {
        return $this->state;
    }

    /**
     * @param string|null $state Action state
     */
    public function setState(?string $state): self
    {
        $this->state = $state;

        return $this;
    }
    public function getCreatedAt(): ?\DateTime
    {
        return $this->createdAt;
    }

    /**
     * @param \DateTime|null $createdAt createdAt
     */
    public function setCreatedAt(?\DateTime $createdAt): self
    {
        $this->createdAt = $createdAt;

        return $this;
    }
    public function getUpdatedAt(): ?\DateTime
    {
        return $this->updatedAt;
    }

    /**
     * @param \DateTime|null $updatedAt updatedAt
     */
    public function setUpdatedAt(?\DateTime $updatedAt): self
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }
}

