<?php
/** @noinspection PhpMissingParamTypeInspection */
/** @noinspection PhpMissingReturnTypeInspection */
/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * Hostinger API PHP SDK
 *
 * API Version: 0.0.96
 * @url https://github.com/hostinger/api-php-sdk
 *
 * NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
 * If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
 */

namespace Hostinger\Model;

use ArrayAccess;
use JsonSerializable;
use InvalidArgumentException;
use ReturnTypeWillChange;
use Hostinger\ObjectSerializer;

/**
 * @implements ArrayAccess<string, mixed>
 */
class InlineObject2 
{
    /**
     * @param string $message
     * @param \Hostinger\Model\InlineObject2Errors $errors
     * @param string $correlationId
     */
    protected static $openAPIModelName = 'InlineObject2';
    public function __construct(
        private $message,
        private $errors,
        private $correlationId,
    ) {
    }

    /**
     * @return string
     */
    public function getMessage()
    {
        return $this->message;
    }

    /**
     * @param string $message
     *
     * @return self
     */
    public function setMessage($message): self
    {
        $this->message = $message;

        return $this;
    }
    /**
     * @return \Hostinger\Model\InlineObject2Errors
     */
    public function getErrors()
    {
        return $this->errors;
    }

    /**
     * @param \Hostinger\Model\InlineObject2Errors $errors
     *
     * @return self
     */
    public function setErrors($errors): self
    {
        $this->errors = $errors;

        return $this;
    }
    /**
     * @return string
     */
    public function getCorrelationId()
    {
        return $this->correlationId;
    }

    /**
     * @param string $correlationId
     *
     * @return self
     */
    public function setCorrelationId($correlationId): self
    {
        $this->correlationId = $correlationId;

        return $this;
    }
}

